# Copyright (c) 2021 Quinn Michaels
# If this is your first time writing a language grammar, check out:
#   - https://flight-manual.atom.io/hacking-atom/sections/creating-a-grammar/

'scopeName': 'source.feecting'
'name': 'Feecting'
'fileTypes': [
  'feecting'
]
'patterns': [
  {
    'match': '([\/\/\|\#]\s.*)$'
    'captures':
      '0':
        'name': 'comment.line'
    'name': 'comment.line.double-slash'
  }
  {
    'match': '(https:\/\/\\w+.\\w+)\\s|$'
    'captures':
      '0':
        'name': 'hyperlink.link.underline.entity.https'
    'name': 'hyperlink'
  }
  {
    'match': '(http:\/\/\\w+.\\w+)\\s|$'
    'captures':
      '0':
        'name': 'hyperlink.link.underline.entity.http'
    'name': 'hyperlink'
  }
  {
    'begin': '///'
    'end': '///'
    'name': 'comment.block'
  }
  {
    'match': '^## DISCLAIMER'
    'name': 'disclaimer.string'
  }
  {
    'match': '::\\s?BEGIN:(.+)'
    'name': 'program.begin.string.line'
  }
  {
    'match': '::\\s?END:(.+)'
    'name': 'program.end.string.line'
  }
  {
    'match': '(\\$.*?)\\w+?\\b',
    'captures':
      '0':
        'name': 'variables.external.constant'
  }
  {
    'match': '(\\@.*?)\\\w+?\\b',
    'captures':
      '0':
        'name': 'variables.user.entity.name.function'
  }
  {
    'match': '(\\#.*?)\\w+?\\b',
    'captures':
      '0':
        'name': 'variables.hash.variable'
  }
  {
    'match': '^\\s*[-|\\d+.]\\s(\\w*):'
    'captures':
      '0':
        'name': 'iterator.constant'
  }
  {
    'match': '(`.*?`)'
    'captures':
      '0':
        'name': 'reference.meta.class'
  }
  {
    'match': '^\\s*(do|for|while|during|set|listen|func|method|module|evaluate|learn|observe|if|then|else|finally|wait):'
    'captures':
      '0':
        'name': 'logic.string'
  }
  {
    'match': '^\\s*(who|what|when|where|why|how|after|choice|action|outcome|pin|birth|origin|cause|source|exist|options):'
    'captures':
      '0':
        'name': 'variable.other.object.property'
  }
  {
    'match': '^\\s*(\\w*):'
    'captures':
      '0':
        'name': 'valueLabel.keyword'
  }
  {
    'match': '^\\s*(\\w*)\\[(.*)\\]:'
    'captures':
      '1':
        'name': 'valueLabel.keyword'
      '2':
        'name': 'logic.string'
  }
]
